- name: Erlang | check already installed
  shell: which erl
  register: which_erl
  failed_when: which_erl.rc not in [0, 1]

- name: Erlang | requires install
  sudo: true
  yum: name={{ item }} state=present
  with_items:
    - "{{ erlang_requires }}"

- name: Erlang | install kerl (version managemnet tool)
  sudo: true
  shell: curl -O https://raw.githubusercontent.com/spawngrid/kerl/master/kerl chdir=/usr/local/bin
  when: which_erl.rc == 1

- name: Erlang | chmod kerl bin file
  sudo: true
  shell: chmod a+x kerl chdir=/usr/local/bin
  when: which_erl.rc == 1

- name: Erlang | bashrc edit
  lineinfile: >
    dest=~/.bashrc
    line="export PATH=/usr/local/bin:$PATH"
  when: which_erl.rc == 1

- name: Erlang | source bashrc
  shell: source ~/.bashrc chdir=~/
  when: which_erl.rc == 1

- name: Erlang | build erlang
  shell: kerl build {{ erlang_version }} build{{ erlang_version }} chdir=/usr/local/src
  when: which_erl.rc == 1

- name: Erlang | make install dir
  shell: mkdir -p ~/bin/erlang/{{ erlang_version }}
  when: which_erl.rc == 1

- name: Erlang | kerl install
  shell: kerl install build{{ erlang_version }} ~/bin/erlang/{{ erlang_version }}
  when: which_erl.rc == 1

- name: Erlang | kerl install
  shell: . ~/bin/erlang/{{ erlang_version }}/activate
  when: which_erl.rc == 1

- name: Erlang | bashrc edit
  lineinfile: >
    dest=~/.bashrc
    line=". ~/bin/erlang/{{ erlang_version }}/activate"
  when: which_erl.rc == 1

- name: Erlang | source bashrc
  shell: source ~/.bashrc chdir=~/
  when: which_erl.rc == 1
